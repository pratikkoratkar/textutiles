{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","to","title","type","id","onClick","toggleMode","role","htmlFor","placeholder","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","Capitalize","msg","About","mystyle","setmystyle","btntext","setBtnText","border","class","App","Mode","setMode","setAlert","showalert","message","setTimeout","body","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.81d77040.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <>\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/About\">About</Link>\r\n                        </li>\r\n                    </ul>\r\n                    <div className={`form-check form-switch my-3 text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault \">{props.mode==='light'?'Enable':'Disable'} Dark Mode</label>\r\n                    </div>\r\n                    <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2 mx-3\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n      </>\r\n    );\r\n}\r\n","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"UpperCase was clicked\" + text);\r\n        let newText= text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"  Converted To Uppercase ! \" , \"Success\")\r\n    }\r\n    const handleLowClick = ()=>{\r\n        let newText= text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"  Converted To Lowercase ! \" , \"Success\")\r\n\r\n    }\r\n    const handleClearClick = ()=>{\r\n        let newText=(\"\");\r\n        setText(newText)\r\n        props.showAlert(\"  Text cleared ! \" , \"Success\")\r\n\r\n    }\r\n    const handleCopy = ()=>{\r\n        var text= document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"  Text copied ! \" , \"Success\")\r\n\r\n    }\r\n    const handleExtraSpaces = ()=>{\r\n        let newText= text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"  Removed extra spaces ! \" , \"Success\")\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        // console.log(\"OnChange\")\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState(\"\");\r\n    // setText(\"new text\");\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='light'?'white':'#47617b',color:props.mode==='light'?'black':'white'}} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To Upparcase</button>\r\n            <button className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>Convert To Lowecase</button>\r\n            <button className=\"btn btn-primary mx-1 my-2 \" onClick={handleClearClick}>Clear Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n        </div>\r\n        <div className=\"container my-4\" style={{color:props.mode==='light'?'black':'white'}}>\r\n            <h3>Your Text Summary</h3>\r\n            <p>{text.split(\" \").length-1} Word AND {text.length} Character</p>\r\n            <p>It takes {0.008 * text.split(\" \").length} minutes to read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox to preview it here\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const Capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n\r\n        props.alert &&<div>\r\n                            <div className={`alert alert-success alert-dismissible fade show`} role=\"alert\">\r\n                                <strong>{Capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n                            </div>\r\n                            \r\n                        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React,{useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n    const  [mystyle, setmystyle] = useState({\r\n        color:\"black\",\r\n        backgroundColor:\"white\"\r\n    })\r\n    const [btntext, setBtnText] = useState(\"Enable Dark Mode\")\r\n\r\n    const toggleStyle = ()=>{\r\n        if(mystyle.color===\"black\"){\r\n            setmystyle({\r\n                color:\"white\",\r\n                backgroundColor:\"black\",\r\n                border:\"2px solid white\"\r\n            })\r\n            setBtnText(\"Enable Light Mode\")\r\n        }\r\n        else{\r\n            setmystyle({\r\n                color:\"black\",\r\n                backgroundColor:\"white\"\r\n            })\r\n            setBtnText(\"Enable Dark Mode\")\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'style={mystyle}>\r\n            <h2 className='my-3'>About Us</h2>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n            <div className=\"accordion-item\"style={mystyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\"style={mystyle}>\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\"style={mystyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\"style={mystyle}>\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\">\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\"style={mystyle}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\"style={mystyle}>\r\n                        Accordion Item #3\r\n                    </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\">\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n            <div className=\"container\">\r\n                <button onClick={toggleStyle} type=\"button\" class=\"btn btn-primary my-3\">{btntext}</button>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React,{ useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport About from './components/About';\n\nfunction App() {\n  const [Mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showalert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode =()=>{\n    if (Mode==='light') {\n      setMode('dark')\n      document.body.style.backgroundColor='#2c3137'\n      showalert(\"  Dark mode has been enabled\",\"  Success\");\n      document.title=\"Textutiles - Dark Mode\"\n    }\n    else{\n      setMode('light')\n      document.body.style.backgroundColor='white'\n      showalert(\"  Light mode has been enabled\",\"  Success\");\n      document.title=\"Textutiles - light Mode\"\n\n\n    }\n  }\n  return (\n  \n    <>\n    <Router>\n    <Navbar title=\"Textutiles App\" mode={Mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <Switch>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n\n          <Route path=\"/\">\n          <TextForm showAlert={showalert} heading=\"Enter The Text To Analyze\" mode={Mode}/>\n          </Route>\n\n    </Switch>\n    </Router>\n    \n    </>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}